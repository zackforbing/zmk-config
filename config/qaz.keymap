/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2

&soft_off { hold-time-ms = <0>; };

&lt {
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
};

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,physical-layout = &split_big_bar_layout;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
    
            require-prior-idle-ms = <250>;
            quick-tap-ms = <250>;
        };
    
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
    
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "balanced";
        };
    
        td: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&none>, <&none>;
        };
    
        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
    
            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    
        bdlt: bksp_del_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&bksp_del>;
    
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };
    
        comma_scln: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
    
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    
        per_cln: period_colon {
            compatible = "zmk,behavior-mod-morph";

            bindings = <&kp PERIOD>, <&kp COLON>;
    
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
    
        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <1 12 22>;
        };
    
        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 17 26>;
        };
    
        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    
        tab {
            bindings = <&kp TAB>;
            key-positions = <3 14>;
        };
    
        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 13>;
        };
    
        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <23 31>;
        };
    
        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };
    
        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <11 2 13>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };
    
        jsdoc {
            bindings = <&js_doc>;
            key-positions = <28 27 26>;
        };
    
        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 12 16 17>;
        };
    
        screen_shot {
            bindings = <&kp LS(LG(N5))>;
            key-positions = <0 11>;
        };
    
        soft_off {
            bindings = <&soft_off>;
            key-positions = <0 32 9 31>;
        };
    
        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 14 5 15>;
        };
    
        bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <20 21 28 27>;
        };
    
        reset {
            bindings = <&sys_reset>;
            key-positions = <30 31 32 33 35>;
        };
    
        globe {
            bindings = <&kp GLOBE>;
            key-positions = <4 5>;
        };
    
        toggle_win {
            bindings = <&tog 1>;
            key-positions = <0 9>;
        };
    
        screenshot_win {
            bindings = <&kp LS(LG(S))>;
            key-positions = <0 11>;
            layers = <1>;
        };
    
        force_quit_mac {
            bindings = <&kp LA(LG(ESCAPE))>;
            key-positions = <0 1 2>;
        };
    
        slash_question {
            bindings = <&kp SLASH>;
            key-positions = <28 27>;
        };
    
        backslash_pipe {
            bindings = <&kp BSLH>;
            key-positions = <28 27>;
            layers = <2>;
        };
    
        studio_unlock {
            bindings = <&studio_unlock>;
            key-positions = <10 11 18 19>;
        };
    };

    macros {
        js_doc: js_doc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
    
        base {
            bindings = <
    &kp Q             &kp W        &kp E        &kp R        &kp T  &kp Y      &kp U        &kp I        &kp O       &kp P
    &hm LCTRL A       &hm LALT S   &hm LGUI D   &hs LSHFT F  &kp G  &kp H      &hs RSHFT J  &hm RGUI K   &hm RALT L  &hm RCTRL SQT
    &kp Z             &kp X        &kp C        &kp V        &kp B  &kp N      &kp M        &comma_scln  &per_cln
    &kp C_PLAY_PAUSE  &lt 4 GLOBE  &lt 2 SPACE                      &bdlt 4 0  &bdlt 2 0    &bksp_del
            >;
        };
    
        base_win {
            bindings = <
    &trans      &trans  &trans       &trans  &trans  &trans  &trans  &trans       &trans  &trans
    &hm LGUI A  &trans  &hm LCTRL D  &trans  &trans  &trans  &trans  &hm RCTRL K  &trans  &hm RGUI SQT
    &trans      &trans  &trans       &trans  &trans  &trans  &trans  &trans       &trans
    &trans      &trans  &trans                       &trans  &trans  &trans
            >;
        };
    
        num_sym {
            bindings = <
    &kp N1              &kp N2         &kp N3           &kp N4         &kp N5      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp UNDER       &kp PLUS          &kp TILDE
    &hm LCTRL NUMBER_6  &hm LALT N7    &hm LGUI N8      &hs LSHFT N9   &kp N0      &kp LEFT_BRACKET      &hs RSHIFT RIGHT_BRACKET  &hm RGUI MINUS  &hm RALT EQUAL    &hm RCTRL GRAVE
    &kp KP_PLUS         &kp KP_MINUS   &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_DOT  &kp LEFT_BRACE        &kp RIGHT_BRACE           &kp LESS_THAN   &kp GREATER_THAN
    &kp KP_DOT          &lt 6 LS(TAB)  &trans                                      &lt 6 LA(DEL)         &trans                    &trans
            >;
        };
    
        num_sym_win {
            bindings = <
    &trans             &trans  &trans        &trans  &trans  &trans  &trans  &trans           &trans  &trans
    &hm LGUI NUMBER_6  &trans  &hm LCTRL N8  &trans  &trans  &trans  &trans  &hm RCTRL MINUS  &trans  &hm RGUI GRAVE
    &trans             &trans  &trans        &trans  &trans  &trans  &trans  &trans           &trans
    &trans             &trans  &trans                        &trans  &trans  &trans
            >;
        };
    
        nav_fn {
            bindings = <
    &mt LEFT_SHIFT PG_UP  &mt LEFT_ALT HOME  &mt LG(LEFT_SHIFT) UP_ARROW  &mt LEFT_ALT END  &kp LS(LA(LC(BACKSLASH)))  &trans      &kp F9        &kp F10          &kp F11          &kp F12
    &mt LALT PAGE_DOWN    &kp LEFT_ARROW     &kp DOWN                     &kp RIGHT         &kp BACKSPACE              &kp DELETE  &hs LSHFT F5  &hm LEFT_GUI F6  &hm LEFT_ALT F7  &hm LCTRL F8
    &kp LG(Z)             &kp LG(X)          &kp LG(C)                    &kp LG(V)         &kp LS(LG(K))              &kp F1      &kp F2        &kp F3           &kp F4
    &trans                &trans             &lt 6 LA(BACKSPACE)                                                       &trans      &mo 6         &trans
            >;
        };
    
        nav_fn_win {
            bindings = <
    &trans               &mt LALT HOME  &trans     &mt LALT END  &trans         &trans  &trans  &trans        &trans  &trans
    &hm LCTRL PAGE_DOWN  &trans         &trans     &trans        &trans         &trans  &trans  &hm RCTRL F6  &trans  &hm RGUI F8
    &kp LC(Z)            &kp LC(X)      &kp LC(C)  &kp LC(V)     &kp LS(LC(K))  &trans  &trans  &trans        &trans
    &trans               &trans         &trans                                  &trans  &trans  &trans
            >;
        };
    
        admin {
            bindings = <
    &bt BT_SEL 0   &bt BT_SEL 1     &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans  &trans  &trans       &trans          &sys_reset
    &bt BT_DISC 0  &bt BT_DISC 1    &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans  &trans  &trans       &trans          &bt BT_CLR
    &kp C_VOL_DN   &kp C_VOLUME_UP  &kp K_MUTE     &trans         &trans         &trans  &trans  &trans       &bt BT_CLR_ALL
    &bt BT_PRV     &bt BT_NXT       &trans                                       &trans  &trans  &bootloader
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    
        num_sym_win {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    
        nav_func_win {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    };

    split_bar_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <6>;
        map = <
    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(4,0) RC(4,1) RC(4,2)
    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,0) RC(5,1) RC(5,2)
    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(4,3) RC(5,3)
    RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(4,4)
        >;
    };

    split_big_bar_transform: keymap_transform1 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <6>;
        map = <
    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(4,0) RC(4,1) RC(4,2)
    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,0) RC(5,1) RC(5,2)
    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(4,3) RC(5,3)
    RC(3,0) RC(3,1) RC(3,2) RC(3,5) RC(3,6) RC(4,4)
        >;
    };

    big_bar_transform: keymap_transform2 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <6>;
        map = <
    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(4,0) RC(4,1) RC(4,2)
    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,0) RC(5,1) RC(5,2)
    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(4,3) RC(5,3)
    RC(3,0) RC(3,1) RC(3,4) RC(3,6) RC(4,4)
        >;
    };

    kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";

        col-gpios
            = <&pro_micro 8 GPIO_ACTIVE_HIGH>
            , <&pro_micro 1 GPIO_ACTIVE_HIGH>
            , <&pro_micro 0 GPIO_ACTIVE_HIGH>
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>
            , <&pro_micro 9 GPIO_ACTIVE_HIGH>
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>
            , <&pro_micro 6 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    split_big_bar_layout: split_big_bar_layout {
      compatible = "zmk,physical-layout";
      display-name = "Split Big Bar";
      transform = <&split_big_bar_transform>;
      kscan = <&kscan0>;
      keys
          = <&key_physical_attrs 100 100    0    0       0     0     0>
          , <&key_physical_attrs 100 100  100    0       0     0     0>
          , <&key_physical_attrs 100 100  200    0       0     0     0>
          , <&key_physical_attrs 100 100  300    0       0     0     0>
          , <&key_physical_attrs 100 100  400    0       0     0     0>
          , <&key_physical_attrs 100 100  500    0       0     0     0>
          , <&key_physical_attrs 100 100  600    0       0     0     0>
          , <&key_physical_attrs 100 100  700    0       0     0     0>
          , <&key_physical_attrs 100 100  800    0       0     0     0>
          , <&key_physical_attrs 125 100  900    0       0     0     0>

          , <&key_physical_attrs 125 100    0  100       0     0     0>
          , <&key_physical_attrs 100 100  125  100       0     0     0>
          , <&key_physical_attrs 100 100  225  100       0     0     0>
          , <&key_physical_attrs 100 100  325  100       0     0     0>
          , <&key_physical_attrs 100 100  425  100       0     0     0>
          , <&key_physical_attrs 100 100  525  100       0     0     0>
          , <&key_physical_attrs 100 100  625  100       0     0     0>
          , <&key_physical_attrs 100 100  725  100       0     0     0>
          , <&key_physical_attrs 100 100  825  100       0     0     0>
          , <&key_physical_attrs 100 100  925  100       0     0     0>

          , <&key_physical_attrs 175 100    0  200       0     0     0>
          , <&key_physical_attrs 100 100  175  200       0     0     0>
          , <&key_physical_attrs 100 100  275  200       0     0     0>
          , <&key_physical_attrs 100 100  375  200       0     0     0>
          , <&key_physical_attrs 100 100  475  200       0     0     0>
          , <&key_physical_attrs 100 100  575  200       0     0     0>
          , <&key_physical_attrs 100 100  675  200       0     0     0>
          , <&key_physical_attrs 100 100  775  200       0     0     0>
          , <&key_physical_attrs 150 100  875  200       0     0     0>
            
          , <&key_physical_attrs 100 100    0  300       0     0     0>
          , <&key_physical_attrs 100 100  100  300       0     0     0>
          , <&key_physical_attrs 325 100  200  300       0     0     0>
          , <&key_physical_attrs 300 100  525  300       0     0     0>
          , <&key_physical_attrs 100 100  825  300       0     0     0>
          , <&key_physical_attrs 100 100  925  300       0     0     0>
          ;
      };

      split_bar_layout: split_bar_layout {
          compatible = "zmk,physical-layout";
          display-name = "Split Bar";
          transform = <&split_bar_transform>;
          kscan = <&kscan0>;
          keys
              = <&key_physical_attrs 100 100    0    0       0     0     0>
              , <&key_physical_attrs 100 100  100    0       0     0     0>
              , <&key_physical_attrs 100 100  200    0       0     0     0>
              , <&key_physical_attrs 100 100  300    0       0     0     0>
              , <&key_physical_attrs 100 100  400    0       0     0     0>
              , <&key_physical_attrs 100 100  500    0       0     0     0>
              , <&key_physical_attrs 100 100  600    0       0     0     0>
              , <&key_physical_attrs 100 100  700    0       0     0     0>
              , <&key_physical_attrs 100 100  800    0       0     0     0>
              , <&key_physical_attrs 125 100  900    0       0     0     0>
    
              , <&key_physical_attrs 125 100    0  100       0     0     0>
              , <&key_physical_attrs 100 100  125  100       0     0     0>
              , <&key_physical_attrs 100 100  225  100       0     0     0>
              , <&key_physical_attrs 100 100  325  100       0     0     0>
              , <&key_physical_attrs 100 100  425  100       0     0     0>
              , <&key_physical_attrs 100 100  525  100       0     0     0>
              , <&key_physical_attrs 100 100  625  100       0     0     0>
              , <&key_physical_attrs 100 100  725  100       0     0     0>
              , <&key_physical_attrs 100 100  825  100       0     0     0>
              , <&key_physical_attrs 100 100  925  100       0     0     0>
    
              , <&key_physical_attrs 175 100    0  200       0     0     0>
              , <&key_physical_attrs 100 100  175  200       0     0     0>
              , <&key_physical_attrs 100 100  275  200       0     0     0>
              , <&key_physical_attrs 100 100  375  200       0     0     0>
              , <&key_physical_attrs 100 100  475  200       0     0     0>
              , <&key_physical_attrs 100 100  575  200       0     0     0>
              , <&key_physical_attrs 100 100  675  200       0     0     0>
              , <&key_physical_attrs 100 100  775  200       0     0     0>
              , <&key_physical_attrs 150 100  875  200       0     0     0>
    
              , <&key_physical_attrs 100 100    0  300       0     0     0>
              , <&key_physical_attrs 100 100  100  300       0     0     0>
              , <&key_physical_attrs 100 100  200  300       0     0     0>
              , <&key_physical_attrs 225 100  300  300       0     0     0>
              , <&key_physical_attrs 200 100  525  300       0     0     0>
              , <&key_physical_attrs 100 100  725  300       0     0     0>
              , <&key_physical_attrs 100 100  825  300       0     0     0>
              , <&key_physical_attrs 100 100  925  300       0     0     0>
              ;
      };

      big_bar_layout: big_bar_layout {
          compatible = "zmk,physical-layout";
          display-name = "Big Bar";
          transform = <&big_bar_transform>;
          kscan = <&kscan0>;
          keys
              = <&key_physical_attrs 100 100    0    0       0     0     0>
              , <&key_physical_attrs 100 100  100    0       0     0     0>
              , <&key_physical_attrs 100 100  200    0       0     0     0>
              , <&key_physical_attrs 100 100  300    0       0     0     0>
              , <&key_physical_attrs 100 100  400    0       0     0     0>
              , <&key_physical_attrs 100 100  500    0       0     0     0>
              , <&key_physical_attrs 100 100  600    0       0     0     0>
              , <&key_physical_attrs 100 100  700    0       0     0     0>
              , <&key_physical_attrs 100 100  800    0       0     0     0>
              , <&key_physical_attrs 125 100  900    0       0     0     0>
    
              , <&key_physical_attrs 125 100    0  100       0     0     0>
              , <&key_physical_attrs 100 100  125  100       0     0     0>
              , <&key_physical_attrs 100 100  225  100       0     0     0>
              , <&key_physical_attrs 100 100  325  100       0     0     0>
              , <&key_physical_attrs 100 100  425  100       0     0     0>
              , <&key_physical_attrs 100 100  525  100       0     0     0>
              , <&key_physical_attrs 100 100  625  100       0     0     0>
              , <&key_physical_attrs 100 100  725  100       0     0     0>
              , <&key_physical_attrs 100 100  825  100       0     0     0>
              , <&key_physical_attrs 100 100  925  100       0     0     0>
    
              , <&key_physical_attrs 175 100    0  200       0     0     0>
              , <&key_physical_attrs 100 100  175  200       0     0     0>
              , <&key_physical_attrs 100 100  275  200       0     0     0>
              , <&key_physical_attrs 100 100  375  200       0     0     0>
              , <&key_physical_attrs 100 100  475  200       0     0     0>
              , <&key_physical_attrs 100 100  575  200       0     0     0>
              , <&key_physical_attrs 100 100  675  200       0     0     0>
              , <&key_physical_attrs 100 100  775  200       0     0     0>
              , <&key_physical_attrs 150 100  875  200       0     0     0>
    
              , <&key_physical_attrs 100 100    0  300       0     0     0>
              , <&key_physical_attrs 100 100  100  300       0     0     0>
              , <&key_physical_attrs 625 100  200  300       0     0     0>
              , <&key_physical_attrs 100 100  825  300       0     0     0>
              , <&key_physical_attrs 100 100  925  300       0     0     0>
              ;
      };

    position_map {
        compatible = "zmk,physical-layout-position-map";
        complete;

        split_big_bar_posmap {
            physical-layout = <&split_big_bar_layout>;
            positions
                = < 0  1  2  3  4  5  6  7  8  9>
                , <10 11 12 13 14 15 16 17 18 19>
                , <20 21 22 23 24 25 26 27    28>
                , <29 30     31    32      33 34>
                ;
        };
        split_bar_posmap {
            physical-layout = <&split_bar_layout>;
            positions
                = < 0  1  2  3  4  5  6  7  8  9>
                , <10 11 12 13 14 15 16 17 18 19>
                , <20 21 22 23 24 25 26 27    28>
                , <29 30 31   32    33  34 35 36>
                ;
        };
        big_bar_posmap {
            physical-layout = <&big_bar_layout>;
            positions
                = < 0  1  2  3  4  5  6  7  8  9>
                , <10 11 12 13 14 15 16 17 18 19>
                , <20 21 22 23 24 25 26 27    28>
                , <29 30        31         32 33>
                ;
        };
    };
};
